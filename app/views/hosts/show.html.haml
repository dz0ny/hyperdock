%script
  Page.data.host = { id: #{@host.id} }
.row
  .container-fluid
    %h4.pull-left
      %i.glyphicon{class:"glyphicon-#{@host.monitor? ? 'eye-open' : 'cloud'}"}
      = @host.name
      %br/
      %span.small= @host.docker_url
    .pull-right
      = link_to 'Edit', edit_host_path(@host), class: 'btn btn-primary btn-sm'
      - if current_user.admin?
        = link_to 'Rails Admin', rails_admin.edit_path(model_name: 'host', id: @host.id), class: 'btn btn-danger btn-sm'
%hr/
.row
  .container-fluid
    .panel.panel-default
      .panel-heading
        Console
        %a(href="#" id="rollup-terminal")
          %i.pull-right.glyphicon.glyphicon-chevron-down
      .panel-body#terminal
    .panel.panel-default
      .panel-heading Usage
      .panel-body
        %ul
          %li Current Disk ...
          %li Current CPU ...
          %li Current RAM ...

    .panel.panel-default
      .panel-heading Containers
      .panel-body
        %ul
          - @host.remote_containers.each do |c|
            %li
              - if c.proxy
                %p
                  Name: 
                  %b= link_to c.proxy.name, container_path(c.proxy)
                %p
                  Owner:
                  = link_to c.proxy.user.email, rails_admin.show_path(model_name: 'user', id: c.proxy.user.id)
                %p
                  Status:
                  = c.proxy.status.capitalize
                %p
                  Image:
                  - if c.image
                    = link_to c.image.name, image_path(c.image)
                  - else
                    %i(title="This image does not exist in the database")
                      = c.Image
              - else
                %p
                  %i(title="Zombie containers are those on the host for which no object exists in Hyperdock") Zombie!
                  = link_to 'Discard', "/hosts/#{@host.id}/zombie/#{c.Id}/discard"
                  - if c.image
                    = link_to 'Reclaim', "/hosts/#{@host.id}/zombie/#{c.Id}/reclaim"
                  - else
                    %i(title="Image must exist in order to reclaim container")
                      Cannot reclaim
                %p
                  Status:
                  = c.Status =~ /Exited/ ? c.Status : "Unknown"
              %p
                Command:
                = c.Command
              %p
                Image:
                = c.Image
              %p(title="SizeRootFs is the total size of all the files in the container, in bytes. If you were to export the filesystem of the container as a tarball, it would be about that size.")
                SizeRootFs:
                = c.SizeRw 
              %p(title="SizeRw is the size of the files which have been created or changed, if you compare the container to its base image. Just after creation, this should be zero; as you modify (or create) files, this will increase.")
                SizeRw:
                = c.SizeRw 
